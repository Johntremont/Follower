{"ast":null,"code":"var _jsxFileName = \"/home/john/Escritorio/Proyectos/Follower/src/pages/Login/components/Imput/Imput.jsx\";\nimport React from 'react';\nimport './Imput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Imput = ({\n  attribute,\n  handleChange,\n  param\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imput-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: attribute.id,\n      name: attribute.name,\n      placeholder: attribute.placeholder,\n      type: attribute.type,\n      onChange: e => handleChange(e.target.name, e.target.value),\n      className: param ? 'imput-error' : 'regular-style'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Imput;\nexport default Imput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Imput\");","map":{"version":3,"sources":["/home/john/Escritorio/Proyectos/Follower/src/pages/Login/components/Imput/Imput.jsx"],"names":["React","Imput","attribute","handleChange","param","id","name","placeholder","type","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA;AAA3B,CAAD,KAAwC;AAClD,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AACA,MAAA,EAAE,EAAEF,SAAS,CAACG,EADd;AAEA,MAAA,IAAI,EAAEH,SAAS,CAACI,IAFhB;AAGA,MAAA,WAAW,EAAEJ,SAAS,CAACK,WAHvB;AAIA,MAAA,IAAI,EAAEL,SAAS,CAACM,IAJhB;AAKA,MAAA,QAAQ,EAAIC,CAAD,IAAON,YAAY,CAACM,CAAC,CAACC,MAAF,CAASJ,IAAV,EAAgBG,CAAC,CAACC,MAAF,CAASC,KAAzB,CAL9B;AAMA,MAAA,SAAS,EAAGP,KAAK,GAAG,aAAH,GAAmB;AANpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;KAAMH,K;AAeN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport './Imput.css';\n\n\nconst Imput = ({ attribute, handleChange, param }) => {\n    return (\n        <div className='imput-container'>\n            <input \n            id={attribute.id}\n            name={attribute.name}\n            placeholder={attribute.placeholder}\n            type={attribute.type}\n            onChange={ (e) => handleChange(e.target.name, e.target.value) }\n            className={ param ? 'imput-error' : 'regular-style'}\n            />\n        </div>\n    )\n};\n\nexport default Imput;"]},"metadata":{},"sourceType":"module"}